# Generated by Django 5.1.3 on 2024-11-28 12:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('CustomUser', '0001_initial'),
        ('ProductData', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Enquirylog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_address', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.CharField(blank=True, max_length=255, null=True)),
                ('long', models.CharField(blank=True, max_length=255, null=True)),
                ('enquire_at', models.DateTimeField(auto_now=True, null=True)),
                ('scheduled', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('type_of_enq', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('list', models.CharField(blank=True, max_length=255, null=True)),
                ('detail', models.CharField(blank=True, max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('kmdriven', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.CharField(blank=True, max_length=255, null=True)),
                ('item_description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ProductData.itemdescription')),
                ('profile', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_log', to='CustomUser.profile')),
            ],
            options={
                'verbose_name': 'ENQUIRY LOG',
                'verbose_name_plural': 'ENQUIRY LOGS',
            },
        ),
        migrations.CreateModel(
            name='ProfileActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('instance', models.CharField(blank=True, max_length=255, null=True)),
                ('search_at', models.DateTimeField(auto_now=True)),
                ('profile', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='activity_profile', to='CustomUser.profile')),
            ],
            options={
                'verbose_name': 'PROFILE ANALYTICS',
                'verbose_name_plural': 'PROFILE ANALYTICS',
            },
        ),
        migrations.CreateModel(
            name='ProfileAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_address', models.CharField(blank=True, max_length=255, null=True)),
                ('door_no', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('area', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('landmark', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.CharField(blank=True, max_length=255, null=True)),
                ('long', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_address', to='CustomUser.profile')),
            ],
            options={
                'verbose_name': 'PROFILE ADDRESS',
                'verbose_name_plural': 'PROFILE ADDRESS',
            },
        ),
        migrations.CreateModel(
            name='ProfileAoi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('interest', models.CharField(blank=True, max_length=255, null=True)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='profile_aoi', to='CustomUser.profile')),
            ],
            options={
                'verbose_name': 'PROFILE AOI',
                'verbose_name_plural': 'PROFILE AOI',
            },
        ),
        migrations.CreateModel(
            name='ProfileFbtoken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_token', models.CharField(blank=True, max_length=255, null=True)),
                ('device_name', models.CharField(blank=True, max_length=255, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_fb', to='CustomUser.profile')),
            ],
            options={
                'verbose_name': 'FB TOKENS',
                'verbose_name_plural': 'FB TOKENS',
            },
        ),
        migrations.CreateModel(
            name='ProfileNoticationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_notification', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='profile_preference', to='CustomUser.profile')),
            ],
            options={
                'verbose_name': 'NOTIFICATION PREFERENCE',
                'verbose_name_plural': 'NOTIFICATION PREFERENCE',
            },
        ),
        migrations.CreateModel(
            name='ProfileSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=255)),
                ('search_at', models.DateTimeField(auto_now=True)),
                ('profile', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='profile_search', to='CustomUser.profile')),
            ],
            options={
                'verbose_name': 'PROFILE SEARCH',
                'verbose_name_plural': 'PROFILE SEARCH',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_item', to='ProductData.itemdescription')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wishlist_profile', to='CustomUser.profile')),
            ],
            options={
                'verbose_name': 'WISHLIST',
                'verbose_name_plural': 'WISHLIST',
                'unique_together': {('profile', 'item')},
            },
        ),
    ]
